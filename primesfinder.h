/* 
 * Primes Finder hex
 */

#include <stdint.h>
#include <unistd.h>

enum Symbols {
    kIncriment = 0x10,
    kSubtract = 0x20,
    kCheckPrimes = 0x30,
    kAddToPrimes = 0x40,
    kEnter = 0xF0,
    kExit = 0xF4,
};

const uint8_t primesFinder []
{
0x00, 0x45, 0xf0, 0x00, 0x02, 0x28, 0x00, 0x02, 
0x20, 0x00, 0x60, 0x01, 0x10, 0x2C, 0x38, 0x60, 
0x29, 0x3b, 0xc0, 0x79, 0x2a, 0xc0, 0x62, 0x2f, 
0x7a, 0x29, 0x76, 0x2a, 0x80, 0x73, 0x48, 0x00, 
0x26, 0x33, 0xd0, 0x76, 0x5c, 0x6d, 0x48, 0x00, 
0x27, 0x79, 0x4c, 0x00, 0x2a, 0x3b, 0xc0, 0x7a, 
0x80, 0x90, 0x10, 0xc0, 0x5e, 0x48, 0x00, 0x00, 
0x29, 0x3a, 0xd0, 0x90, 0x2a, 0xb0, 0x4c, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const uint8_t primesFinderB []
{
0x41, 0xF0, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x20, 0x00, 0x60, 0x01, 0x10, 0x30, 0x40, 0x60, 
0x29, 0x3b, 0xc0, 0x62, 0x79, 0x2f, 0x7a, 0x29, 
0x76, 0x2a, 0x80, 0x77, 0x48, 0x00, 0x00, 0x00, 
0x26, 0x37, 0xd0, 0x76, 0x5c, 0x6d, 0x48, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x2a, 0x3b, 0xc0, 0x7a, 0x80, 0x77, 0x33, 0xc0, 
0x5e, 0x29, 0x76, 0x48, 0x00, 0x00, 0x00, 0x00, 
0x29, 0x3a, 0xd0, 0x90, 0x2a, 0xb0, 0x4c, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x12, 0x79, 0x4c, 0x00, 0xf0, 0x00, 0x00, 0x00, 
};

const size_t primesFinderSize = sizeof (primesFinderB);
